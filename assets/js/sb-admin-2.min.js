/*!
 * Start Bootstrap - SB Admin 2 v4.1.1 (https://startbootstrap.com/themes/sb-admin-2)
 * Copyright 2013-2020 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */
const pesan = `
=========================================================

 .oooooo..o ooooooooooooo   .oooooo.   ooooooooo.      .o. 
d8P'    'Y8 8'   888   '8  d8P'  'Y8b  '888   'Y88.    888 
Y88bo.           888      888      888  888   .d88'    888 
 '"Y8888o.       888      888      888  888ooo88P'     Y8P 
     '"Y88b      888      888      888  888            '8' 
oo     .d8P      888      '88b    d88'  888            .o. 
8""88888P'      o888o      'Y8bood8P'  o888o           Y8P 

==========================================================
Melakukan tindakan ilegal dengan menggunakan fitur ini,
Berarti anda telah melanggar Hak Kekayaan Intelektual dan 
dapat dituntut hukum !!

Copyright Â© HMJ TI Undiksha `+ new Date().getFullYear();
console.log(pesan);

!function (s) {
	"use strict"; s("#sidebarToggle, #sidebarToggleTop").on("click", function (e) { s("body").toggleClass("sidebar-toggled"), s(".sidebar").toggleClass("toggled"), s(".sidebar").hasClass("toggled") && s(".sidebar .collapse").collapse("hide") }), s(window).resize(function () { s(window).width() < 768 && s(".sidebar .collapse").collapse("hide"), s(window).width() < 480 && !s(".sidebar").hasClass("toggled") && (s("body").addClass("sidebar-toggled"), s(".sidebar").addClass("toggled"), s(".sidebar .collapse").collapse("hide")) }), s("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) { if (768 < s(window).width()) { var o = e.originalEvent, l = o.wheelDelta || -o.detail; this.scrollTop += 30 * (l < 0 ? 1 : -1), e.preventDefault() } }), s(document).on("scroll", function () { 100 < s(this).scrollTop() ? s(".scroll-to-top").fadeIn() : s(".scroll-to-top").fadeOut() }), s(document).on("click", "a.scroll-to-top", function (e) { var o = s(this); s("html, body").stop().animate({ scrollTop: s(o.attr("href")).offset().top }, 1e3, "easeInOutExpo"), e.preventDefault() })
}(jQuery);

window.setTimeout("waktu()", 1000);

function waktu() {
	var waktu = new Date();
	setTimeout("waktu()", 1000);
	if (document.getElementById("jam") != null || document.getElementById("menit") != null || document.getElementById("detik") != null) {
		document.getElementById("jam").innerHTML = waktu.getHours() + "	:";
		document.getElementById("menit").innerHTML = waktu.getMinutes() + "	:";
		document.getElementById("detik").innerHTML = waktu.getSeconds() + " WITA";
	}
}
$('.tombol-hapus').on('click', function (e) {
	e.preventDefault();
	const href = $(this).attr('href');
	Swal.fire({
		title: 'Apakah Anda Yakin Ingin Menghapus?',
		text: 'Semua file yang berkaitan dengan data ini akan terhapus secara permanen',
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yakin'
	}).then((result) => {
		if (result.value) {
			document.location.href = href;
		}
	})

});
$('.tombol-reset').on('click', function (e) {
	e.preventDefault();
	const href = $(this).attr('href');
	Swal.fire({
		title: 'Apakah Anda Yakin Ingin Mereset Token Ini?',
		text: 'Anda harus melakukan generate token untuk mengaktifkan token dari user ini',
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yakin'
	}).then((result) => {
		if (result.value) {
			document.location.href = href;
		}
	})

});
$('.log-out').on('click', function (e) {
	e.preventDefault();
	const href = $(this).attr('href');
	Swal.fire({
		title: 'Apakah Anda Yakin?',
		text: "Pastikan Pekerjaan Anda Telah Tersimpan Sebelumnya",
		icon: 'question',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yakin'
	}).then((result) => {
		if (result.value) {
			document.location.href = href;
		}
	})

});


$('#pil_wajib').on('change', function () {
	var nilai = $('#pil_wajib option:selected').attr('value');
	console.log(nilai);
});
window.setTimeout(function () {
	$("#modalInfo").modal('show');
}, 2000);
$('#modalInfoLogin').modal('show');

$(document).ready(function () {
	const success = $('.berhasil').data('berhasil');
	if (success) {
		Swal.fire({
			position: 'top-end',
			icon: 'success',
			text: 'Berhasil ' + success,
			showConfirmButton: false,
		})
	}
});
$(document).ready(function () {
	const success = $('.login').data('login');
	if (success) {
		Swal.fire({
			position: 'center',
			icon: 'success',
			text: success ,
			showConfirmButton: true,
		})
	}
});
$(document).ready(function () {
	const gagal = $('.gagal').data('gagal');
	if (gagal) {
		Swal.fire({
			position: 'top-end',
			icon: 'error',
			text: 'Opss.. Gagal ' + gagal,
			showConfirmButton: false,
		})
	}
});
$(document).ready(function () {
	var proposal_before = $('#proposal').val();
	if (proposal_before == 1) {
		$('.pengumpulan_proposal').fadeIn('slow');
		$('#pengumpulan_lomba_integer').attr("required", true);
		$('#tanggal_kumpul_mulai').attr("required", true);
		$('#tanggal_kumpul_selesai').attr("required", true);
	} else {
		$('.pengumpulan_proposal').css("display", "none");
		$('#pengumpulan_lomba_integer').val("");
		$('#tanggal_kumpul_mulai').val("");
		$('#tanggal_kumpul_selesai').val("");
	}
	$('#proposal').change(function (e) {
		var proposal = $('#proposal').val();
		if (proposal == 1) {
			$('.pengumpulan_proposal').fadeIn('slow');
			$('#pengumpulan_lomba_integer').attr("required", true);
			$('#tanggal_kumpul_mulai').attr("required", true);
			$('#tanggal_kumpul_selesai').attr("required", true);
		} else {
			$('.pengumpulan_proposal').fadeOut('slow');
			$('#pengumpulan_lomba_integer').attr("required", false);
			$('#tanggal_kumpul_mulai').attr("required", false);
			$('#tanggal_kumpul_selesai').attr("required", false);
		}
	});
});

const pilihanUtama = document.querySelector("#pilihanUtama"),
	pilihanCadangan = document.querySelector("#pilihanCadangan");

const panitiaCadangan = () => {
	if (pilihanUtama != null && pilihanCadangan != null) {
		const printList = (list) => {
			//set default
			let def = pilihanCadangan.querySelector("option").innerHTML;
			pilihanCadangan.innerHTML = `<option>${def}</option>`;

			// loop
			list.map((l) => (pilihanCadangan.innerHTML += `<option>${l}</option>`));

		}

		let getAllList = pilihanUtama.querySelectorAll("option");
		getAllList = [...getAllList];

		let all = [];
		getAllList.map((l) => all.push(l.innerHTML));

		let ls = pilihanUtama.value;
		let rest = [];
		all.filter((l) => {
			if (l != ls) rest.push(l);
		});
		printList(rest);
	}
}
panitiaCadangan();
// prodi
const nim = document.querySelector("#nim"),
	prodi = document.querySelector("#prodi");


const checkProdi = () => {
	if (nim != null && prodi != null) {
		const elProdi = prodi.querySelectorAll("option");
		if (nim.value.length == 10) {
			let code = nim.value.slice(4, 6);

			[...elProdi].filter((p) => {
				if (p.value == code) prodi.value = code;
			});
		}
	}
}



